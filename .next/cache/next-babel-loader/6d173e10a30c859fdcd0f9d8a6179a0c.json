{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Link from 'next/link';\nimport SpeakerCard from '../src/SpeakerCard';\n\nclass Speakers extends Component {\n  static getRepartidoresURL() {\n    if (false) {\n      return process.env.RESTURL_SPEAKERS_PROD;\n    } else {\n      return process.env.RESTURL_SPEAKERS_DEV;\n    }\n  }\n\n  static async getInitialProps() {\n    let response = await fetch(Speakers.getRepartidoresURL());\n    let data = await response.json();\n    return {\n      repartidores: data\n    };\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      repartidores: props.repartidores\n    };\n  }\n\n  componentDidMount() {}\n\n  componentWillUnmount() {}\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"container\"\n    }, __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"card-deck\"\n    }, this.state.repartidores.map(r => __jsx(\"div\", {\n      className: \"card col-4 cardmin margintopbottom20\",\n      key: r.id\n    }, __jsx(SpeakerCard, {\n      repartidor: r\n    }))))));\n  }\n\n}\n\nexport default Speakers;","map":{"version":3,"sources":["C:/Users/Jorge Garnica/Documents/CursosOnline/NextJs/next-project/pages/speakers.js"],"names":["React","Component","Link","SpeakerCard","Speakers","getRepartidoresURL","process","env","RESTURL_SPEAKERS_PROD","RESTURL_SPEAKERS_DEV","getInitialProps","response","fetch","data","json","repartidores","constructor","props","state","componentDidMount","componentWillUnmount","render","map","r","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;;AACA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAI/B,SAAOI,kBAAP,GAA4B;AAC1B,eAA2C;AACzC,aAAOC,OAAO,CAACC,GAAR,CAAYC,qBAAnB;AACD,KAFD,MAEO;AACL,aAAOF,OAAO,CAACC,GAAR,CAAYE,oBAAnB;AACD;AACF;;AAED,eAAaC,eAAb,GAA+B;AAC7B,QAAIC,QAAQ,GAAG,MAAMC,KAAK,CAACR,QAAQ,CAACC,kBAAT,EAAD,CAA1B;AACA,QAAIQ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAjB;AACA,WAAO;AACLC,MAAAA,YAAY,EAAEF;AADT,KAAP;AAGD;;AAEDG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXH,MAAAA,YAAY,EAAEE,KAAK,CAACF;AADT,KAAb;AAGD;;AAEDI,EAAAA,iBAAiB,GAAG,CACnB;;AAEDC,EAAAA,oBAAoB,GAAG,CACtB;;AAGDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACG,KAAKH,KAAL,CAAWH,YAAX,CAAwBO,GAAxB,CAA6BC,CAAD,IAC3B;AAAK,MAAA,SAAS,EAAC,sCAAf;AAAsD,MAAA,GAAG,EAAEA,CAAC,CAACC;AAA7D,OACE,MAAC,WAAD;AAAa,MAAA,UAAU,EAAED;AAAzB,MADF,CADD,CADH,CADF,CADF,CADF;AAaD;;AAhD8B;;AAmDjC,eAAenB,QAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Link from 'next/link';\r\nimport SpeakerCard from '../src/SpeakerCard';\r\nclass Speakers extends Component {\r\n\r\n\r\n\r\n  static getRepartidoresURL() {\r\n    if (process.env.NODE_ENV === \"production\") {\r\n      return process.env.RESTURL_SPEAKERS_PROD;\r\n    } else {\r\n      return process.env.RESTURL_SPEAKERS_DEV;\r\n    }\r\n  }\r\n\r\n  static async getInitialProps() {\r\n    let response = await fetch(Speakers.getRepartidoresURL());\r\n    let data = await response.json();\r\n    return {\r\n      repartidores: data\r\n    }\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      repartidores: props.repartidores\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  componentWillUnmount() {\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"card-deck\">\r\n            {this.state.repartidores.map((r) =>\r\n              <div className=\"card col-4 cardmin margintopbottom20\" key={r.id}>\r\n                <SpeakerCard repartidor={r} />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Speakers;"]},"metadata":{},"sourceType":"module"}